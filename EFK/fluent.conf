# source：定义了日志收集的来源,从TCP请求收集日志 端口为24221,并且设置了tag为debug
<source>
  @type  tcp
  @id    debug-input
  port  24221
  tag debug
  <parse>
    @type json
  </parse>
</source>

<source>
  @type  tcp
  @id    error-input
  port  24222
  tag error
  # parse：将error日志转换成JSON
  <parse>
    @type json
  </parse>
</source>

<source>
  @type  tcp
  @id    business-input
  port  24223
  tag business
  <parse>
    @type json
  </parse>
</source>

<source>
  @type  tcp
  @id    record-input
  port  24224
  tag record
  <parse>
    @type json
  </parse>
</source>

# filter：对收集的日志进行一系列处理
<filter record>
  @type parser
  key_name message
  reserve_data true
  remove_key_name_field true
  <parse>
    @type json
  </parse>
</filter>


# match：收集的日志输出到那个位置,可以是：stdout(控制台),file、elasticsearch、mongo等
<match fluent.**>
  @type stdout
  output_type json
</match>

<match **>
  # 使用elasticsearch 来保存日志
  @type elasticsearch
  host 192.168.31.208
  port 9200
  type_name docker
  # 控制日志索引名称生成,生成日志索引格式
  logstash_format true
  logstash_prefix docker-${tag}-logs
  logstash_dateformat %Y-%m-%d
  # 控制日志输出到elasticsearch 时间间隔
  flush_interval 5s
  include_tag_key true
</match>